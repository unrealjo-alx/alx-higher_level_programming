# Test with valid integer matrix and divisor

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

# Test with valid float matrix and divisor
>>> matrix_divided([[1.5, 2.5], [3.5, 4.5]], 2.0)
[[0.75, 1.25], [1.75, 2.25]]

# Test with zero divisor
>>> matrix_divided([[1, 2], [3, 4], [5, 6]], 0)
Traceback (most recent call last):
    ...
ZeroDivisionError: division by zero

# Test with matrix rows of different lengths
>>> matrix_divided([[1, 2], [3]], 2)
Traceback (most recent call last):
    ...
TypeError: Each row of the matrix must have the same size

# Test with non-integer/float matrix element
>>> matrix_divided([[1, 2], [3, 'four']], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test with non-matrix input
>>> matrix_divided([1, 2, 3], 2)
Traceback (most recent call last):
    ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Test with non-numeric divisor
>>> matrix_divided([[1, 2], [3, 4]], 'a')
Traceback (most recent call last):
    ...
TypeError: div must be a number